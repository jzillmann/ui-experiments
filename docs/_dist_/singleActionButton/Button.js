import './Button.css.proxy.js';
/* src/singleActionButton/Button.svelte generated by Svelte v3.29.7 */
import {
	SvelteComponent,
	append,
	attr,
	bubble,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	listen,
	mount_component,
	safe_not_equal,
	set_data,
	space,
	text,
	toggle_class,
	transition_in,
	transition_out
} from "../../modules/svelte/internal.js";

import SvgIcon from "../svg/SvgIcon.js";

function create_fragment(ctx) {
	let button;
	let div1;
	let svgicon;
	let t0;
	let div0;
	let t1;
	let button_class_value;
	let current;
	let mounted;
	let dispose;

	svgicon = new SvgIcon({
			props: {
				size: /*svgSpec*/ ctx[1].size,
				d: /*svgSpec*/ ctx[1].d,
				animation: /*pressed*/ ctx[2]
				? /*svgSpec*/ ctx[1].activeAnim
				: "undefined"
			}
		});

	return {
		c() {
			button = element("button");
			div1 = element("div");
			create_component(svgicon.$$.fragment);
			t0 = space();
			div0 = element("div");
			t1 = text(/*name*/ ctx[0]);
			attr(div0, "class", "ml-2");
			attr(div1, "class", "flex items-center select-none ");
			attr(button, "class", button_class_value = "inline-block pt-2 pb-1 pl-2 pr-3 border-b-2 rounded-md cursor-pointer outline-none focus:outline-none " + /*extraClass*/ ctx[3] + " svelte-1dq38gd");
			toggle_class(button, "pressed", /*pressed*/ ctx[2]);
		},
		m(target, anchor) {
			insert(target, button, anchor);
			append(button, div1);
			mount_component(svgicon, div1, null);
			append(div1, t0);
			append(div1, div0);
			append(div0, t1);
			current = true;

			if (!mounted) {
				dispose = listen(button, "click", /*click_handler*/ ctx[4]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			const svgicon_changes = {};
			if (dirty & /*svgSpec*/ 2) svgicon_changes.size = /*svgSpec*/ ctx[1].size;
			if (dirty & /*svgSpec*/ 2) svgicon_changes.d = /*svgSpec*/ ctx[1].d;

			if (dirty & /*pressed, svgSpec*/ 6) svgicon_changes.animation = /*pressed*/ ctx[2]
			? /*svgSpec*/ ctx[1].activeAnim
			: "undefined";

			svgicon.$set(svgicon_changes);
			if (!current || dirty & /*name*/ 1) set_data(t1, /*name*/ ctx[0]);

			if (!current || dirty & /*extraClass*/ 8 && button_class_value !== (button_class_value = "inline-block pt-2 pb-1 pl-2 pr-3 border-b-2 rounded-md cursor-pointer outline-none focus:outline-none " + /*extraClass*/ ctx[3] + " svelte-1dq38gd")) {
				attr(button, "class", button_class_value);
			}

			if (dirty & /*extraClass, pressed*/ 12) {
				toggle_class(button, "pressed", /*pressed*/ ctx[2]);
			}
		},
		i(local) {
			if (current) return;
			transition_in(svgicon.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(svgicon.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(button);
			destroy_component(svgicon);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	
	let { name } = $$props;
	let { svgSpec } = $$props;
	let { pressed = false } = $$props;
	let { extraClass = "" } = $$props;

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("name" in $$props) $$invalidate(0, name = $$props.name);
		if ("svgSpec" in $$props) $$invalidate(1, svgSpec = $$props.svgSpec);
		if ("pressed" in $$props) $$invalidate(2, pressed = $$props.pressed);
		if ("extraClass" in $$props) $$invalidate(3, extraClass = $$props.extraClass);
	};

	return [name, svgSpec, pressed, extraClass, click_handler];
}

class Button extends SvelteComponent {
	constructor(options) {
		super();

		init(this, options, instance, create_fragment, safe_not_equal, {
			name: 0,
			svgSpec: 1,
			pressed: 2,
			extraClass: 3
		});
	}
}

export default Button;